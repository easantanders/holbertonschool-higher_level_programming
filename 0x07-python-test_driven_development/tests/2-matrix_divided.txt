============================
The ``2-matrix_divided`` module
============================
---------------------
Using ``matrix_divided``
---------------------

Checking for module docstring:

>>> m = __import__("2-matrix_divided").__doc__
>>> len(m) > 1
True

Checking for function docstring:

>>> f = __import__("2-matrix_divided").matrix_divided.__doc__
>>> len(f) > 1
True

Importing the function:
          >>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Test matrix with integers:

>>> matrix = [[1, 2, 3], [7, 8, 9]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [2.33, 2.67, 3.0]]

Test matrix with floats:

>>> matrix = [[1.5, 3, 9.6], [6.3, 9, 12]]
>>> matrix_divided(matrix, 3)
[[0.5, 1.0, 3.2], [2.1, 3.0, 4.0]]

Test matrix empty:

>>> matrix = []
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
IndexError: list index out of range

Test matrix with different size of rows:

>>> matrix = [[3, 3, 3], [3, 3, 3, 3], [3, 3, 3]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

Test matrix with strings:

>>> matrix = [[1, 1, 1], [1, "School", 1]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

Test matrix divided by 0:

>>> matrix = [[1, 1, 1], [1, 1, 1]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

Test matrix divided by string:

>>> matrix = [[1, 1, 1], [1, 1, 1]]
>>> matrix_divided(matrix, "8")
Traceback (most recent call last):
TypeError: div must be a number

Test matrix divided by float:

>>> matrix = [[1.5, 1.5, 1.5], [1.5, 1.5, 1.5]]
>>> matrix_divided(matrix, 0.5)
[[3.0, 3.0, 3.0], [3.0, 3.0, 3.0]]
