============================
The ``0-add_integer`` module
============================
---------------------
Using ``add_integer``
---------------------

Checking for module docstring:

>>> m = __import__("0-add_integer").__doc__
>>> len(m) > 1
True

Checking for function docstring:

>>> f = __import__("0-add_integer").add_integer.__doc__
>>> len(f) > 1
True

Importing the function:
	  >>> add_integer = __import__("0-add_integer").add_integer

Test addition with normal parameters:
>>> add_integer(3, 5)
8

Test with negative integers:

>>> add_integer(-3, 5)
2

Test with a single integer:

>>> add_integer(5)
103

Test with floats:

>>> add_integer(5.2, 3)
8

Test with parameters other than integers or floats:

>>> add_integer(5.2, "School")
Traceback (most recent call last):
TypeError: b must be an integer

Test with parameters other than integers or floats:

>>> add_integer("School", 5.2)
Traceback (most recent call last):
TypeError: a must be an integer

Test with unknown variable:

>>> add_integer(School, 5.2)
Traceback (most recent call last):
NameError: name 'School' is not defined

Test with unknown variable:

>>> add_integer(5.2, School)
Traceback (most recent call last):
NameError: name 'School' is not defined

Test with more than two arguments:

>>> add_integer(5.2, 3, 5)
Traceback (most recent call last):
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

Test without arguments:

Traceback (most recent call last):
TypeError: add_integer() missing 1 required positional argument: 'a'
